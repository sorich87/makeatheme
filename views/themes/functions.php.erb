<?php
/**
 * _s functions and definitions
 *
 * @package _s
 * @since _s 1.0
 */

/**
 * Set the content width based on the theme's design and stylesheet.
 *
 * @since _s 1.0
 */
if ( ! isset( $content_width ) )
	$content_width = 640; /* pixels */

if ( ! function_exists( '_s_setup' ) ):
/**
 * Sets up theme defaults and registers support for various WordPress features.
 *
 * Note that this function is hooked into the after_setup_theme hook, which runs
 * before the init hook. The init hook is too late for some features, such as indicating
 * support post thumbnails.
 *
 * @since _s 1.0
 */
function _s_setup() {

	/**
	 * Custom template tags for this theme.
	 */
	require( get_template_directory() . '/inc/template-tags.php' );

	/**
	 * Custom functions that act independently of the theme templates
	 */
	require( get_template_directory() . '/inc/tweaks.php' );

	/**
	 * Add default posts and comments RSS feed links to head
	 */
	add_theme_support( 'automatic-feed-links' );

	/**
	 * Enable support for Post Thumbnails
	 */
	add_theme_support( 'post-thumbnails' );

	<% if navs = theme.blocks.where(name: 'navigation') %>
	/**
	 * This theme uses wp_nav_menu() in one location.
	 */
	<% navs.each do |nav| %>
	register_nav_menus( array(
		'<%= nav.label.underscore %>' => __( '<%= "#{nav.label} #{nav.name.titleize}" %>', '_s' ),
	) );
	<% end %>
	<% end %>
}
endif; // _s_setup
add_action( 'after_setup_theme', '_s_setup' );

<% if sidebars = theme.blocks.where(name: 'sidebar') %>
/**
 * Register widgetized area and update sidebar with default widgets
 *
 * @since _s 1.0
 */
function _s_widgets_init() {
	<% sidebars.each do |sidebar| %>
	register_sidebar( array(
		'name' => __( '<%= "#{sidebar.label} #{sidebar.name.titleize}" %>', '_s' ),
		'id' => '<%= sidebar.label.underscore %>',
		'before_widget' => '<aside id="%1$s" class="widget %2$s">',
		'after_widget' => '</aside>',
		'before_title' => '<h1 class="widget-title">',
		'after_title' => '</h1>',
	) );
	<% end %>
}
add_action( 'widgets_init', '_s_widgets_init' );
<% end %>

/**
 * Enqueue scripts and styles
 */
function _s_scripts() {
	wp_enqueue_style( 'style', get_stylesheet_uri() );

	if ( is_singular() && comments_open() && get_option( 'thread_comments' ) ) {
		wp_enqueue_script( 'comment-reply' );
	}
}
add_action( 'wp_enqueue_scripts', '_s_scripts' );

<% if theme.blocks.where(name: 'header_image') %>
/**
* Implement the Custom Header feature
*/
require( get_template_directory() . '/inc/custom-header.php' );
<% end %>
